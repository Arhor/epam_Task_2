[Paragraph]: [The action at the boundaries
]
 [Sentence]: [The action at the boundaries
]
     [Word]: [The]
[character]: [T]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [action]
[character]: [a]
[character]: [c]
[character]: [t]
[character]: [i]
[character]: [o]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [at]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [the]
[character]: [t]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [boundaries]
[character]: [b]
[character]: [o]
[character]: [u]
[character]: [n]
[character]: [d]
[character]: [a]
[character]: [r]
[character]: [i]
[character]: [e]
[character]: [s]
[Delimiter]: [
]
[Paragraph]: [Because of erasure, I find that the most confusing aspect of generics is the fact that you can represent things that have no meaning? For example:
]
 [Sentence]: [Because of erasure, I find that the most confusing aspect of generics is the fact that you can represent things that have no meaning? ]
     [Word]: [Because]
[character]: [B]
[character]: [e]
[character]: [c]
[character]: [a]
[character]: [u]
[character]: [s]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [of]
[character]: [o]
[character]: [f]
[Delimiter]: [ ]
     [Word]: [erasure]
[character]: [e]
[character]: [r]
[character]: [a]
[character]: [s]
[character]: [u]
[character]: [r]
[character]: [e]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [I]
[character]: [I]
[Delimiter]: [ ]
     [Word]: [find]
[character]: [f]
[character]: [i]
[character]: [n]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [the]
[character]: [t]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [most]
[character]: [m]
[character]: [o]
[character]: [s]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [confusing]
[character]: [c]
[character]: [o]
[character]: [n]
[character]: [f]
[character]: [u]
[character]: [s]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [ ]
     [Word]: [aspect]
[character]: [a]
[character]: [s]
[character]: [p]
[character]: [e]
[character]: [c]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [of]
[character]: [o]
[character]: [f]
[Delimiter]: [ ]
     [Word]: [generics]
[character]: [g]
[character]: [e]
[character]: [n]
[character]: [e]
[character]: [r]
[character]: [i]
[character]: [c]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [is]
[character]: [i]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [the]
[character]: [t]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [fact]
[character]: [f]
[character]: [a]
[character]: [c]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [you]
[character]: [y]
[character]: [o]
[character]: [u]
[Delimiter]: [ ]
     [Word]: [can]
[character]: [c]
[character]: [a]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [represent]
[character]: [r]
[character]: [e]
[character]: [p]
[character]: [r]
[character]: [e]
[character]: [s]
[character]: [e]
[character]: [n]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [things]
[character]: [t]
[character]: [h]
[character]: [i]
[character]: [n]
[character]: [g]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [have]
[character]: [h]
[character]: [a]
[character]: [v]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [no]
[character]: [n]
[character]: [o]
[Delimiter]: [ ]
     [Word]: [meaning]
[character]: [m]
[character]: [e]
[character]: [a]
[character]: [n]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [?]
[Delimiter]: [ ]
 [Sentence]: [For example:
]
     [Word]: [For]
[character]: [F]
[character]: [o]
[character]: [r]
[Delimiter]: [ ]
     [Word]: [example]
[character]: [e]
[character]: [x]
[character]: [a]
[character]: [m]
[character]: [p]
[character]: [l]
[character]: [e]
[Delimiter]: [:]
[Delimiter]: [
]
[Listing]: [\~: generics/ArrayMaker.java

import java.lang.reflect.*;
import java.util.*;

public class ArrayMaker<T> {

    private Class<T> kind;

    public ArrayMaker(Class<T> kind) { this.kind = kind; }

    @SuppressWarnings("unchecked")
    T[] create(int size) {
        return (T[])Array.newInstance(kind, size);
    }

    public static void main(String[] args) {
        ArrayMaker<String> stringMaker = new ArrayMaker<String>(String.class);
        String[] stringArray = stringMaker.create(9);
        System.out.println(Arrays.toString(stringArray));
    }
}

/* Output: [null, null, null, null, null, null, null, null, null] */~\
]
[Paragraph]: [Even though kind is stored as Class<T>, erasure means that it is actually just being stored as a Class, with no parameter. So, when you do something with it, as in creating an array, Array's method newInstance( ) doesn't actually have the type information that's implied in kind; so it cannot produce the specific result, which must therefore be cast, which produces a warning that you cannot satisfy.]
 [Sentence]: [Even though kind is stored as Class<T>, erasure means that it is actually just being stored as a Class, with no parameter. ]
     [Word]: [Even]
[character]: [E]
[character]: [v]
[character]: [e]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [though]
[character]: [t]
[character]: [h]
[character]: [o]
[character]: [u]
[character]: [g]
[character]: [h]
[Delimiter]: [ ]
     [Word]: [kind]
[character]: [k]
[character]: [i]
[character]: [n]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [is]
[character]: [i]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [stored]
[character]: [s]
[character]: [t]
[character]: [o]
[character]: [r]
[character]: [e]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [as]
[character]: [a]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [Class]
[character]: [C]
[character]: [l]
[character]: [a]
[character]: [s]
[character]: [s]
[Delimiter]: [<]
     [Word]: [T]
[character]: [T]
[Delimiter]: [>]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [erasure]
[character]: [e]
[character]: [r]
[character]: [a]
[character]: [s]
[character]: [u]
[character]: [r]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [means]
[character]: [m]
[character]: [e]
[character]: [a]
[character]: [n]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [it]
[character]: [i]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [is]
[character]: [i]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [actually]
[character]: [a]
[character]: [c]
[character]: [t]
[character]: [u]
[character]: [a]
[character]: [l]
[character]: [l]
[character]: [y]
[Delimiter]: [ ]
     [Word]: [just]
[character]: [j]
[character]: [u]
[character]: [s]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [being]
[character]: [b]
[character]: [e]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [ ]
     [Word]: [stored]
[character]: [s]
[character]: [t]
[character]: [o]
[character]: [r]
[character]: [e]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [as]
[character]: [a]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [a]
[character]: [a]
[Delimiter]: [ ]
     [Word]: [Class]
[character]: [C]
[character]: [l]
[character]: [a]
[character]: [s]
[character]: [s]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [with]
[character]: [w]
[character]: [i]
[character]: [t]
[character]: [h]
[Delimiter]: [ ]
     [Word]: [no]
[character]: [n]
[character]: [o]
[Delimiter]: [ ]
     [Word]: [parameter]
[character]: [p]
[character]: [a]
[character]: [r]
[character]: [a]
[character]: [m]
[character]: [e]
[character]: [t]
[character]: [e]
[character]: [r]
[Delimiter]: [.]
[Delimiter]: [ ]
 [Sentence]: [So, when you do something with it, as in creating an array, Array's method newInstance( ) doesn't actually have the type information that's implied in kind; so it cannot produce the specific result, which must therefore be cast, which produces a warning that you cannot satisfy.]
     [Word]: [So]
[character]: [S]
[character]: [o]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [when]
[character]: [w]
[character]: [h]
[character]: [e]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [you]
[character]: [y]
[character]: [o]
[character]: [u]
[Delimiter]: [ ]
     [Word]: [do]
[character]: [d]
[character]: [o]
[Delimiter]: [ ]
     [Word]: [something]
[character]: [s]
[character]: [o]
[character]: [m]
[character]: [e]
[character]: [t]
[character]: [h]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [ ]
     [Word]: [with]
[character]: [w]
[character]: [i]
[character]: [t]
[character]: [h]
[Delimiter]: [ ]
     [Word]: [it]
[character]: [i]
[character]: [t]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [as]
[character]: [a]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [in]
[character]: [i]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [creating]
[character]: [c]
[character]: [r]
[character]: [e]
[character]: [a]
[character]: [t]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [ ]
     [Word]: [an]
[character]: [a]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [array]
[character]: [a]
[character]: [r]
[character]: [r]
[character]: [a]
[character]: [y]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [Array]
[character]: [A]
[character]: [r]
[character]: [r]
[character]: [a]
[character]: [y]
[Delimiter]: [']
     [Word]: [s]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [method]
[character]: [m]
[character]: [e]
[character]: [t]
[character]: [h]
[character]: [o]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [newInstance]
[character]: [n]
[character]: [e]
[character]: [w]
[character]: [I]
[character]: [n]
[character]: [s]
[character]: [t]
[character]: [a]
[character]: [n]
[character]: [c]
[character]: [e]
[Delimiter]: [(]
[Delimiter]: [ ]
[Delimiter]: [)]
[Delimiter]: [ ]
     [Word]: [doesn]
[character]: [d]
[character]: [o]
[character]: [e]
[character]: [s]
[character]: [n]
[Delimiter]: [']
     [Word]: [t]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [actually]
[character]: [a]
[character]: [c]
[character]: [t]
[character]: [u]
[character]: [a]
[character]: [l]
[character]: [l]
[character]: [y]
[Delimiter]: [ ]
     [Word]: [have]
[character]: [h]
[character]: [a]
[character]: [v]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [the]
[character]: [t]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [type]
[character]: [t]
[character]: [y]
[character]: [p]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [information]
[character]: [i]
[character]: [n]
[character]: [f]
[character]: [o]
[character]: [r]
[character]: [m]
[character]: [a]
[character]: [t]
[character]: [i]
[character]: [o]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [']
     [Word]: [s]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [implied]
[character]: [i]
[character]: [m]
[character]: [p]
[character]: [l]
[character]: [i]
[character]: [e]
[character]: [d]
[Delimiter]: [ ]
     [Word]: [in]
[character]: [i]
[character]: [n]
[Delimiter]: [ ]
     [Word]: [kind]
[character]: [k]
[character]: [i]
[character]: [n]
[character]: [d]
[Delimiter]: [;]
[Delimiter]: [ ]
     [Word]: [so]
[character]: [s]
[character]: [o]
[Delimiter]: [ ]
     [Word]: [it]
[character]: [i]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [cannot]
[character]: [c]
[character]: [a]
[character]: [n]
[character]: [n]
[character]: [o]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [produce]
[character]: [p]
[character]: [r]
[character]: [o]
[character]: [d]
[character]: [u]
[character]: [c]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [the]
[character]: [t]
[character]: [h]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [specific]
[character]: [s]
[character]: [p]
[character]: [e]
[character]: [c]
[character]: [i]
[character]: [f]
[character]: [i]
[character]: [c]
[Delimiter]: [ ]
     [Word]: [result]
[character]: [r]
[character]: [e]
[character]: [s]
[character]: [u]
[character]: [l]
[character]: [t]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [which]
[character]: [w]
[character]: [h]
[character]: [i]
[character]: [c]
[character]: [h]
[Delimiter]: [ ]
     [Word]: [must]
[character]: [m]
[character]: [u]
[character]: [s]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [therefore]
[character]: [t]
[character]: [h]
[character]: [e]
[character]: [r]
[character]: [e]
[character]: [f]
[character]: [o]
[character]: [r]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [be]
[character]: [b]
[character]: [e]
[Delimiter]: [ ]
     [Word]: [cast]
[character]: [c]
[character]: [a]
[character]: [s]
[character]: [t]
[Delimiter]: [,]
[Delimiter]: [ ]
     [Word]: [which]
[character]: [w]
[character]: [h]
[character]: [i]
[character]: [c]
[character]: [h]
[Delimiter]: [ ]
     [Word]: [produces]
[character]: [p]
[character]: [r]
[character]: [o]
[character]: [d]
[character]: [u]
[character]: [c]
[character]: [e]
[character]: [s]
[Delimiter]: [ ]
     [Word]: [a]
[character]: [a]
[Delimiter]: [ ]
     [Word]: [warning]
[character]: [w]
[character]: [a]
[character]: [r]
[character]: [n]
[character]: [i]
[character]: [n]
[character]: [g]
[Delimiter]: [ ]
     [Word]: [that]
[character]: [t]
[character]: [h]
[character]: [a]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [you]
[character]: [y]
[character]: [o]
[character]: [u]
[Delimiter]: [ ]
     [Word]: [cannot]
[character]: [c]
[character]: [a]
[character]: [n]
[character]: [n]
[character]: [o]
[character]: [t]
[Delimiter]: [ ]
     [Word]: [satisfy]
[character]: [s]
[character]: [a]
[character]: [t]
[character]: [i]
[character]: [s]
[character]: [f]
[character]: [y]
[Delimiter]: [.]
